1. Relational model Building Blocks
   - Entity
      Person, place thing or event distribuition, unique, and distinct
   - Attribute
      A characteristic of an entity
   - Relationship
      Describe association among effect; one to many, many to many, one to one
      
     - one to many
        - e.g. one customer have many invoices
        - Chen notation: customer(1)-[have]-(M)invoice
     - many to many
        - e.g. many student take many classes
        - Chen notation: student(M)-[take]-(M)class
     - one to one
        - e.g. one manager manage one store
        - Chen notation: manager(1)-[manage]-(1)store
   - other notation rule
      - Crow's foot notation
      - UML class diagram notation

2. SELECT statement
   Tell a database which table your data will come from
   
   ex1: select one column
   <input>
   SELECT product_name
   FROM Product;
   
   <output>
   product_name
   shampoo
   toothpasete
   deodorant
   toothbrush
   
   ex2: select multiple column
   <input>
   SELECT product_name
          ,product_id
          ,product_price
   FROM Product;
   
   <output>
   product_name  product_id  product_price
   shampoo          5            $7.6
   toothpasete      11           $2.3
   deodorant        46           $10.0
   toothbrush       34           $5.5
   
   ex3: select all column
   <input>
   SELECT *
   FROM Product;
   
   *: wildcard
   
   ex4: limit result number to 3
   <input>
   SELECT product_name
   FROM Product
   LIMIT 5;
   
   <output>
   product_name
   shampoo
   toothpasete
     
3. Create new tables

   ex1: create shoes table
   <input>
   CREATE TABLE Shoes
   (
   id      char(10)      PRIMARY KEY,
   Brand   char(10)      NOT NULL,
   Type    char(250)     NOT NULL,
   Color   char(250)     NOT NULL,
   Price   decimal(8,2)  NOT NULL,
   Desc    Varchar(750)  NULL,
   );
   
   PRIMARY KEY -- Must have a value
   NOT NULL -- Error will be return if column have no value
   NULL -- Accept no value
   
   ex2: adding data to the table
   <input>
   INSERT INTO Shoes
          (Id
          ,Brand
          ,Type
          ,Color
          ,Price
          ,Desc
          )
   VALUES ('14535974'
           ,'Gucci'
           ,'Slippers'
           ,'Pink'
           ,'695.00'
           ,NULL
           );
   
4. Create temporary tables   
   - temporary tables will be deleted when current session is terminated
   - Faster than creating a real table
   
   ex1: create temporary table "sandals" and 
                     it contain sandal's all column data from shoes table
   <input>
   CREATE TEMPORARY TABLE Sandals AS
   (
      SELECT *
      FROM shoes
      WHERE shoe_type = 'sandals'
   )

5. Adding comments to SQL
   ex1:
   <input>
   SELECT shoe_id
      - -,brand_id  
         ,shoe_name
   FROM shoes
   
   <output>
   shoe_id   shoe_name
      1       sandal
      2       sneaker
      3       crocks
   
   ex2:
   <input>
   SELECT shoe_id
       /*,brand_id  
         ,shoe_name
       */
   FROM shoes
   
   <output>
   shoe_id
      1       
      2      
      3        
